name: CI/CD (Docker, Next.js)

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

# Root-level perms for GITHUB_TOKEN
permissions:
  contents: read
  packages: write

env:
  IMAGE_OWNER: ${{ github.repository_owner }}
  IMAGE_NAME:  ${{ github.event.repository.name }}
  IMAGE_TAG_LATEST: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
  IMAGE_TAG_SHA:    ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.sha }}

jobs:
  build-and-push:
    # Only publish on real pushes (PRs get read-only tokens)
    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Debug context
        run: |
          echo "Event: ${{ github.event_name }}"
          echo "Actor: ${{ github.actor }}"
          echo "Owner: ${{ env.IMAGE_OWNER }}"
          echo "Repo:  ${{ env.IMAGE_NAME }}"
          echo "Push targets:"
          echo "  ${{ env.IMAGE_TAG_LATEST }}"
          echo "  ${{ env.IMAGE_TAG_SHA }}"

      # Try GITHUB_TOKEN first
      - name: Log in to GHCR (GITHUB_TOKEN)
        id: login-ghcr-gt
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # If you added GHCR_PAT, this will overwrite the previous login and guarantees write access
      - name: (Optional) Log in to GHCR with PAT (override)
        if: secrets.GHCR_PAT != ''
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build & push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_TAG_LATEST }}
            ${{ env.IMAGE_TAG_SHA }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
